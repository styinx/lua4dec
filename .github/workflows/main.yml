name: main

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  main:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [windows-latest, ubuntu-latest]
        build_type: [Release]
        c_compiler: [clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            bin: .exe
            sep: '\\'
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
            bin: ''
            sep: '/'
        exclude:
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      run: .${{ matrix.sep }}test${{ matrix.bin }} .${{ matrix.sep }}lua4${{ matrix.sep }}luac${{ matrix.bin }} .${{ matrix.sep }}lua4dec${{ matrix.bin }} .${{ matrix.sep }}test${{ matrix.sep }}scripts${{ matrix.sep }}

    - name: Upload Build Results
      uses: actions/upload-artifact@v3
      with:
        name: binaries-${{ matrix.os }}-${{ github.sha }}
        path: |
          ${{ github.workspace }}/lua4/luac${{ matrix.bin }}
          ${{ github.workspace }}/lua4dec${{ matrix.bin }}
